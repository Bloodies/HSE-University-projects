task_7 <- function()
{
s <- c("4,5", "6,8", "9,2", "1,75")
sum(s)
cat(sum(s))
}
task_7()
task_7 <- function()
{
s <- c("4,5", "6,8", "9,2", "1,75")
sum(s)
class(x)
cat(sum(s))
}
task_7()
task_7 <- function()
{
s <- c("4,5", "6,8", "9,2", "1,75")
class(x)
cat(sum(s))
}
task_7()
part <- round((a/b)*100, 2)
task_7 <- function()
{
s <- c("4,5", "6,8", "9,2", "1,75")
class(s)
cat(sum(s))
}
task_7()
task_7 <- function()
{
s <- c("4,5", "6,8", "9,2", "1,75")
cat(class(s))
cat(sum(s))
}
task_7()
task_7 <- function()
{
s <- c("4,5", "6,8", "9,2", "1,75")
n <- as.numeric(sum(s))
cat(n)
}
task_7()
task_7 <- function()
{
s <- c("4,5", "6,8", "9,2", "1,75")
n <- as.numeric(s)
cat(sum(n))
}
task_7()
task_7 <- function()
{
s <- c("4,5", "6,8", "9,2", "1,75")
n <- as.numeric(s)
cat(n)
}
task_7()
task_7 <- function()
{
s <- c("4,5", "6,8", "9,2", "1,75")
n <- as.numeric(gsub(",", ".", s))
cat(n)
}
task_7()
task_7 <- function()
{
s <- c("4,5", "6,8", "9,2", "1,75")
n <- as.numeric(gsub(",", ".", s))
cat(sum(n))
}
task_7()
task_8 <- function()
{
A <- c(1, 2, 3, 4, 2, 7, 6, 9, 3, 6, 3, 8, 4, 9, 8, 2);
dim(A) <- c(4,4);
cat("Обратная матрица")
solve(A)
cat("Транспонированная матрица")
t(A)
cat("Сумма диагональных элементов")
diag(A)
cat("Определитель матрицы")
det(A)
cat("Алгебраическое дополнение")
}
task_8()
task_8 <- function()
{
A <- c(1, 2, 3, 4, 2, 7, 6, 9, 3, 6, 3, 8, 4, 9, 8, 2);
dim(A) <- c(4,4);
cat("Обратная матрица")
cat(solve(A))
cat("Транспонированная матрица")
cat(t(A))
cat("Сумма диагональных элементов")
cat(diag(A))
cat("Определитель матрицы")
cat(det(A))
cat("Алгебраическое дополнение")
}
task_8()
task_8 <- function()
{
A <- c(1, 2, 3, 4, 2, 7, 6, 9, 3, 6, 3, 8, 4, 9, 8, 2);
dim(A) <- c(4,4);
cat("Обратная матрица")
print(solve(A))
cat("Транспонированная матрица")
print(t(A))
cat("Сумма диагональных элементов")
print(diag(A))
cat("Определитель матрицы")
print(det(A))
cat("Алгебраическое дополнение")
}
task_8()
task_8 <- function()
{
A <- c(1, 2, 3, 4, 2, 7, 6, 9, 3, 6, 3, 8, 4, 9, 8, 2);
dim(A) <- c(4,4);
cat("Обратная матрица\n")
print(solve(A))
cat("Транспонированная матрица\n")
print(t(A))
cat("Сумма диагональных элементов\n")
print(diag(A))
cat("Определитель матрицы\n")
print(det(A))
cat("Алгебраическое дополнение\n")
}
task_8()
task_8 <- function()
{
A <- c(1, 2, 3, 4, 2, 7, 6, 9, 3, 6, 3, 8, 4, 9, 8, 2);
dim(A) <- c(4,4);
cat("Обратная матрица\n")
print(solve(A))
cat("Транспонированная матрица\n")
print(t(A))
cat("Сумма диагональных элементов\n")
print(sum(diag(A)))
cat("Определитель матрицы\n")
print(det(A))
cat("Алгебраическое дополнение\n")
}
task_8()
task_8 <- function()
{
Y <- c(1, 50, 1, 75);
dim(Y) <- c(2, 2);
Z <- c(100, 6625);
dim(Z) <- c(2, 1);
cat("Решение системы уравнений\n")
print(solve(Y, Z))
A <- c(1, 2, 3, 4, 2, 7, 6, 9, 3, 6, 3, 8, 4, 9, 8, 2);
dim(A) <- c(4, 4);
cat("Обратная матрица\n")
print(solve(A))
cat("Транспонированная матрица\n")
print(t(A))
cat("Сумма диагональных элементов\n")
print(sum(diag(A)))
cat("Определитель матрицы\n")
print(det(A))
cat("Алгебраическое дополнение\n")
}
task_8()
task_8 <- function()
{
Y <- c(1, 50, 1, 75);
dim(Y) <- c(2, 2);
Z <- c(100, 6625);
dim(Z) <- c(2, 1);
cat("Решение системы уравнений\n")
print(solve(Y, Z))
A <- c(1, 2, 3, 4, 2, 7, 6, 9, 3, 6, 3, 8, 4, 9, 8, 2);
dim(A) <- c(4, 4);
cat("Обратная матрица\n")
print(solve(A))
cat("Транспонированная матрица\n")
print(t(A))
cat("Сумма диагональных элементов\n")
print(sum(diag(A)))
cat("Определитель матрицы\n")
print(det(A))
Ax <- c(1, 3, 4, 2, 6, 9, 4, 8, 2);
dim(Ax) <- c(3, 3);
cat("Алгебраическое дополнение\n")
print(det(-A))
}
task_8()
task_8 <- function()
{
Y <- c(1, 50, 1, 75);
dim(Y) <- c(2, 2);
Z <- c(100, 6625);
dim(Z) <- c(2, 1);
cat("Решение системы уравнений\n")
print(solve(Y, Z))
A <- c(1, 2, 3, 4, 2, 7, 6, 9, 3, 6, 3, 8, 4, 9, 8, 2);
dim(A) <- c(4, 4);
cat("Обратная матрица\n")
print(solve(A))
cat("Транспонированная матрица\n")
print(t(A))
cat("Сумма диагональных элементов\n")
print(sum(diag(A)))
cat("Определитель матрицы\n")
print(det(A))
Ax <- c(1, 3, 4, 2, 6, 9, 4, 8, 2);
dim(Ax) <- c(3, 3);
cat("Алгебраическое дополнение\n")
print(det(-Ax))
}
task_8()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
task_1()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
task_1()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
task_1()
task_2()
task_3()
task_3()
task_3()
task_3 <- function()
{
class(x) <- 3.5    # numeric
class(y) <- "2,6"  # character
class(z) <- 1.78   # numeric
class(h) <- TRUE   # logical
cat(class(x))
print(class(y))
print(class(z))
print(class(h))
}
task_3()
task_3 <- function()
{
x <- 3.5    # numeric
y <- "2,6"  # character
z <- 1.78   # numeric
h <- TRUE   # logical
class(x);
class(y);
class(z);
class(h);
}
task_4()
task_5()
task_1()
task_1()
task_1()
task_2()
task_2()
task_3()
task_4()
task_5()
task_6()
task_7()
task_8()
source('~/Coding/R/Lab.2/Tasks/all_in_one.R', encoding = 'UTF-8', echo=TRUE)
